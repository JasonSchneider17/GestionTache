<Window x:Class="GestionTache.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GestionTache"
        mc:Ignorable="d"
        Title="{DynamicResource TitleApp}" Height="750" Width="1000" MinWidth="800" MinHeight="750">

    <Window.Resources>
        <Image x:Key="visible" Source="Image/open-eye.png"  />
        <Image x:Key="hidden"  Source="Image/close-eye.png"/>
        
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="Undo" Executed="Undo_Executed"/>
        <CommandBinding Command="Redo" Executed="Redo_Executed"/>
        <!--<CommandBinding Command="Help" Executed="Help_Executed"/>-->
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="Z" Modifiers="Ctrl" Command="Undo"/>
        <KeyBinding Key="Y" Modifiers="Ctrl" Command="Redo"/>
        <!--<KeyBinding Key="F1"  Command="Help"/>-->
    </Window.InputBindings>

   <!--Grid principale-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>

        </Grid.ColumnDefinitions>

        <!--Barre de menu-->
        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top" VerticalAlignment="Stretch"  >
                <!--Menu Liste-->
                <MenuItem Height="25"  >
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource ListMenu}"   />
                    </MenuItem.Header>
                    <MenuItem x:Name="menuItem_addListOfTask" Header="{DynamicResource AddListMenu}" Click="menuItem_addListOfTask_Click">
                        <MenuItem.Icon>
                            <Image Source="Image/plus.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuItem_UpdateListOfTask" IsEnabled="False" Header="{DynamicResource EditMenuList}" Click="menuItem_UpdateListOfTask_Click">
                        <MenuItem.Icon>
                            <Image Source="Image/edit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuItem_DeleteListOfTask" IsEnabled="False" Header="{DynamicResource DeleteMenuList}" Click="menuItem_DeleteListOfTask_Click">
                        <MenuItem.Icon>
                            <Image Source="Image/delete.png"/>
                        </MenuItem.Icon>
                    </MenuItem>

                </MenuItem>
                <!--Menu tâche-->
                <MenuItem  Height="25" VerticalAlignment="Stretch"  >
                    <MenuItem.Header>
                        <TextBlock Text="{DynamicResource MenuTask}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </MenuItem.Header>
                    <MenuItem x:Name="menuItem_addTask" Header="{DynamicResource AddMenuTask}" IsEnabled="False" Click="menuItem_addTask_Click">
                        <MenuItem.Icon>
                            <Image Source="Image/plus.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuItem_EdiTask" IsEnabled="False" Header="{DynamicResource EditMenuTask}" Click="menuItem_EdiTask_Click">
                        <MenuItem.Icon>
                            <Image Source="Image/edit.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="menuItem_DeleteTask" IsEnabled="False" Header="{DynamicResource DeleteMenuTask}" Click="menuItem_DeleteTask_Click" >
                        <MenuItem.Icon>
                            <Image Source="Image/delete.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <!--<MenuItem x:Name="MenuHelp" Header="Aide" Click="MenuHelp_Click"/>-->
            </Menu>
        </DockPanel>

        <!--Grid corp du programme-->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="260" MinWidth="200" MaxWidth="320"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="1*" MinWidth="300" />
                <ColumnDefinition Width="25"/>
            </Grid.ColumnDefinitions>
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" Background="White" />


            <Border BorderThickness="0,0,1,0" BorderBrush="Black">
                <!--Grid liste-->
                <Grid Margin="0,0,7,0" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="1*" />

                    </Grid.RowDefinitions>

                    <Button x:Name="Button_AddList" Content="{DynamicResource AddList}" ToolTip="{DynamicResource AddListToolTip}" FontSize="17" FontWeight="Bold"   Margin="5" Click="Button_AddList_Click">

                    </Button>
                    <ListBox x:Name="listBox_listOfTasks" ItemsSource="{Binding Path=Lists, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" HorizontalContentAlignment="Stretch"  Grid.Row="1" BorderThickness="0" >
                        <!--SelectionChanged="listBox_listOfTasks_SelectionChanged"-->

                        <ListBox.Resources>
                            <Style x:Key="DeleteListContextMenuStyle" TargetType="MenuItem">
                                <EventSetter Event="Click" Handler="List_Click_Delete"/>
                            </Style>
                            <Style x:Key="UpdateListContextMenuStyle" TargetType="MenuItem">
                                <EventSetter Event="Click" Handler="List_Click_Update"/>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem">
                                <Setter Property="Tag" Value="{Binding ID}"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                                <Setter Property="BorderThickness" Value="0,1,0,0"/>
                                <EventSetter Event="Selected" Handler="ListBoxItem_Selected_1"/>
                                <EventSetter Event="KeyDown" Handler="ListBoxItem_KeyDown"/>
                                <Setter Property="ContextMenu" >
                                    <Setter.Value>
                                        <ContextMenu >
                                            <MenuItem Header="Supprimer Liste" Tag="{Binding ID}" Style="{StaticResource DeleteListContextMenuStyle}" >
                                                <MenuItem.Icon>
                                                    <Image Source="Image/delete.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="Modifier nom liste" Tag="{Binding ID}" Style="{StaticResource UpdateListContextMenuStyle}" >
                                                <MenuItem.Icon>
                                                    <Image Source="Image/edit.png"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid HorizontalAlignment="Stretch" Margin="0,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                    </Grid.RowDefinitions>

                                    <Image Source="Image/list.png" Height="20"  VerticalAlignment="Center" Margin="2,0,2,0"/>
                                    <TextBlock x:Name="txtBlockNameList" Grid.Column="1"  Text="{Binding Name}" Tag="{Binding ID}" Panel.ZIndex="0"
                                           FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,2,0" >
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding (ListBoxItem.IsSelected),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="true">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                        
                                    </TextBlock>

                                    <TextBox x:Name="txtBoxNameList" MaxLength="25"  Grid.Column="1"   Text="{Binding Name}" Tag="{Binding ID}" Panel.ZIndex="1"
                                         FontSize="18" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="10,0,2,0" Visibility="Hidden"  KeyDown="txtBoxNameList_KeyDown" LostKeyboardFocus="txtBoxNameList_LostKeyboardFocus" />
                                    <Label  Content="{Binding NumberTaskToDo}" Grid.Column="2" FontSize="12" Foreground="Gray" VerticalAlignment="Center"  />

                                </Grid>


                            </DataTemplate>
                        </ListBox.ItemTemplate>

                    </ListBox>
                </Grid>
            </Border>

            <Grid Grid.Column="2" Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="1*" MinHeight="400"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="180" MinHeight="150" MaxHeight="220"/>
                </Grid.RowDefinitions>


                <Border BorderBrush="Black" BorderThickness="0,0,0,1" >
                    <Grid Grid.Row="0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="txtBox_TitleList"  Height="50" Padding="5"  FontWeight="Bold" FontSize="25"  VerticalAlignment="Center" />
                        


                    </Grid>
                </Border>

               
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="150"/>
                        
                    </Grid.ColumnDefinitions>


                    <Button x:Name="Button_AddTask"  VerticalAlignment="Center" Width="35" Height="35" HorizontalAlignment="Left" Grid.Column="0" Margin="10,0,0,0" IsEnabled="False" Content="+" FontSize="20" FontWeight="Bold" VerticalContentAlignment="Center" ToolTip="Ajouter une tâche" Click="Button_AddTask_Click"/>
                    <ProgressBar x:Name="progressBarTasks" Minimum="0" ToolTip="{DynamicResource ProgressBarToolTip}" Foreground="#a8e063" Grid.Column="1" Margin="10,5,10,5" >
                        
                    </ProgressBar>
                    <TextBlock x:Name="textBlockTotalTasks"  Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    <Button x:Name="Button_Visibility_Task" Grid.Column="2" Margin="10,0,10,0" Width="35" Height="35"  ToolTip="{DynamicResource BtnVisibilityToolTip}" Click="Button_Visibility_Task_Click" >
                        <DynamicResource ResourceKey="visible"/>

                    </Button>
                    <ComboBox x:Name="cmbBoxSortTask" ToolTip="{DynamicResource ComboBoxTaskSortToolTip}" ItemsSource="{Binding Path=TypeSorts}"  Grid.Column="3" Margin="5" Height="25" SelectionChanged="cmbBoxSortTask_SelectionChanged" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>

                <ListBox x:Name="ListBox_Tasks" ItemsSource="{Binding Path=Tasks, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"   HorizontalContentAlignment="Stretch" Grid.Row="2" BorderThickness="0"  Margin="5,10,0,10"   >
                    <ListBox.Background>
                        <SolidColorBrush Opacity="0"/>
                    </ListBox.Background>

                    <ListBox.Resources>
                        <Style x:Key="DeleteTaskContextMenuStyle" TargetType="MenuItem">
                            <EventSetter Event="Click" Handler="MenuItem_Task_Click_Delete"/>
                        </Style>
                        <Style x:Key="UpdateTaskContextMenuStyle" TargetType="MenuItem">
                            <EventSetter Event="Click" Handler="MenuItem_Task_Click_Update"/>
                        </Style>
                    </ListBox.Resources>

                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Margin" Value="0,2,0,2"/>
                            <Setter Property="Tag" Value="{Binding IDTask}"/>
                            
                            <EventSetter Event="Loaded" Handler="ListBoxItem_Loaded"/>
                            <EventSetter Event="Selected" Handler="ListBoxItem_Selected"/>
                            <EventSetter Event="KeyDown" Handler="ListBoxItemTaskDelete"/>

                            <Setter Property="ContextMenu" >
                                <Setter.Value>
                                    <ContextMenu >
                                        <MenuItem Header="{DynamicResource ContextMenuDeleteHeader}" Tag="{Binding IDTask}" Style="{StaticResource DeleteTaskContextMenuStyle}" >
                                            <MenuItem.Icon>
                                                <Image Source="Image/delete.png"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource ContextMenuUpdateHeader}" Tag="{Binding IDTask}" Style="{StaticResource UpdateTaskContextMenuStyle}" >
                                            <MenuItem.Icon>
                                                <Image Source="Image/edit.png"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </Setter.Value>
                            </Setter>

                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding State}" Value="true"/>
                                        <Condition Binding="{Binding Path=IsTaskHiding , RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="true"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </MultiDataTrigger>
                            </Style.Triggers>

                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>

                        <DataTemplate>

                            <Border x:Name="BorderGridItemTask" BorderBrush="Black" BorderThickness="1" CornerRadius="5" >
                                <Border.Style>
                                    <Style TargetType="Border">

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Priority.DegreePriority}" Value="1">
                                                <Setter Property="Background" >
                                                    <Setter.Value>


                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.8">
                                                            <GradientStop Color="White" Offset="0.65"/>
                                                            <GradientStop Color="#6dd5ed" Offset="1.0"/>

                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Priority.DegreePriority}" Value="2">
                                                <Setter Property="Background" >
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.8">
                                                            <GradientStop Color="White" Offset="0.65"/>
                                                            <GradientStop Color="#ffaf7b" Offset="1.0"/>

                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Priority.DegreePriority}" Value="3">
                                                <Setter Property="Background" >
                                                    <Setter.Value>
                                                       
                                                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.8">
                                                            <GradientStop Color="White" Offset="0.65"/>
                                                            <GradientStop Color="#ed4264 " Offset="1.0"/>

                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>


                                <Grid x:Name="GridItemTask" Height="70" HorizontalAlignment="Stretch" Margin="5,0,5,0" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="100"/>
                                    </Grid.ColumnDefinitions>
                                   

                                    <CheckBox x:Name="CheckBox_TaskState" Grid.Column="0"  IsChecked="{Binding State}" ToolTip="{DynamicResource CheckBoxTaskToolTip}" FontSize="25" VerticalAlignment="Center" Checked="CheckBox_TaskState_Checked" Tag="{Binding IDTask}" Unchecked="CheckBox_TaskState_Unchecked" >
                                        <CheckBox.LayoutTransform>
                                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                        </CheckBox.LayoutTransform>
                                    </CheckBox>

                                    <TextBlock x:Name="txtblockNameTask"  Grid.Column="1" Margin="0,0,10,0" Text="{Binding Name}" Tag="{Binding IDTask}"
                                           Visibility="Visible" VerticalAlignment="Center"  FontSize="15" Panel.ZIndex="0" HorizontalAlignment="Stretch" >
                                                                                <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding State}" Value="true">
                                                        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding (ListBoxItem.IsSelected),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="true">
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>

                                    <TextBox x:Name="txtboxNameTask" Grid.Column="1" MaxLength="100"  Margin="0,0,10,0" Text="{Binding Name}" Panel.ZIndex="1"
                                      Visibility="Hidden" VerticalAlignment="Center"  FontSize="15"  
                                         LostFocus="txtboxNameTask_LostFocus" Tag="{Binding IDTask}" KeyDown="txtboxNameTask_KeyDown"  HorizontalAlignment="Stretch"/>


                                    <ComboBox x:Name="cmbBoxTaskPriority" ItemsSource="{Binding PrioritiesDisplay }" SelectedItem="{Binding Priority}" Grid.Column="2" ToolTip="{DynamicResource ComboBoxTaskToolTip}"
                                          Height="25" VerticalAlignment="Center" IsSynchronizedWithCurrentItem="True" 
                                          SelectionChanged="cmbBoxTaskPriority_SelectionChanged" Tag="{Binding IDTask}" >
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Name}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                            </Border>


                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <GridSplitter Grid.Row="3"  ResizeBehavior="PreviousAndNext" HorizontalAlignment="Stretch" Background="White" />

                <Border x:Name="BorderComment" BorderBrush="Black" Grid.Row="4" BorderThickness="0,1,0,0" Visibility="Hidden" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="1*"/>
                        </Grid.RowDefinitions>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>

                        <Label Content="Commentaire"  VerticalContentAlignment="Center" FontWeight="Bold"/>
                            <Button x:Name="btnCommentSave"  HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,5,0,0" Width="40"  Grid.Column="1" ToolTip="{DynamicResource BtnSaveCommentToolTip}" Click="BtnCommentSave_Click">
                                <Image Source="Image/save.png"/>
                            </Button>
                        </Grid>




                        <Border BorderBrush="Black" BorderThickness="1" Grid.Row="1" Margin="10,5,10,5">
                        <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="5,0,0,0"  >
                            <TextBlock x:Name="Textblock_Comment" ToolTip="{DynamicResource TextBlockCommentToolTip}"  TextWrapping="Wrap"  Text="{Binding Path=CommentText, Mode=OneWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" MouseDown="Textblock_Comment_MouseDown" />
                        </ScrollViewer>
                        </Border>

                        <TextBox x:Name="TextBox_Comment" Grid.Row="1" Visibility="Hidden" Panel.ZIndex="1"   Margin="10,5,10,5"  KeyDown="TextBox_Comment_KeyDown"  TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto"  Text="{Binding Path=CommentText, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" BorderBrush="Black"  LostKeyboardFocus="TextBox_Comment_LostKeyboardFocus"  />

                    </Grid>
                </Border>



            </Grid>

        </Grid>

    </Grid>
</Window>
